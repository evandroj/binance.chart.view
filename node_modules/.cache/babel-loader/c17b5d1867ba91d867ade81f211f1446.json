{"ast":null,"code":"import axios from 'axios';\nimport Candle from './Candle';\nexport async function getCandles() {\n  let symbol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'BTCUSDT';\n  let interval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '1m';\n  const response = await axios.get(`http://localhost:3001/klines?symbol=${symbol.toUpperCase()}&interval=${interval}`);\n  const candles = response.data.map(k => {\n    return new Candle(k[0], k[1], k[2], k[3], k[4]);\n  });\n  return candles;\n}","map":{"version":3,"names":["axios","Candle","getCandles","symbol","interval","response","get","toUpperCase","candles","data","map","k"],"sources":["/home/evandro/MEGA/Projetos/estudo/tradingview/src/DataService.js"],"sourcesContent":["import axios from 'axios';\nimport Candle from './Candle';\n\nexport async function getCandles(symbol = 'BTCUSDT', interval = '1m') {\n    const response = await axios.get(`http://localhost:3001/klines?symbol=${symbol.toUpperCase()}&interval=${interval}`);\n    const candles = response.data.map(k => {\n        return new Candle(k[0], k[1], k[2], k[3], k[4]);\n    });\n\n    return candles;\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAO,eAAeC,UAAf,GAA+D;EAAA,IAArCC,MAAqC,uEAA5B,SAA4B;EAAA,IAAjBC,QAAiB,uEAAN,IAAM;EAClE,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAW,uCAAsCH,MAAM,CAACI,WAAP,EAAqB,aAAYH,QAAS,EAA3F,CAAvB;EACA,MAAMI,OAAO,GAAGH,QAAQ,CAACI,IAAT,CAAcC,GAAd,CAAkBC,CAAC,IAAI;IACnC,OAAO,IAAIV,MAAJ,CAAWU,CAAC,CAAC,CAAD,CAAZ,EAAiBA,CAAC,CAAC,CAAD,CAAlB,EAAuBA,CAAC,CAAC,CAAD,CAAxB,EAA6BA,CAAC,CAAC,CAAD,CAA9B,EAAmCA,CAAC,CAAC,CAAD,CAApC,CAAP;EACH,CAFe,CAAhB;EAIA,OAAOH,OAAP;AACH"},"metadata":{},"sourceType":"module"}